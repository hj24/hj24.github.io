<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on 客舟听雨</title>
    <link>https://hj24.life/tags/python/</link>
    <description>Recent content in Python on 客舟听雨</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Mon, 02 Mar 2020 15:37:20 +0800</lastBuildDate>
    
	<atom:link href="https://hj24.life/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>从源码看flask是如何保证线程安全的</title>
      <link>https://hj24.life/posts/%E4%BB%8E%E6%BA%90%E7%A0%81%E7%9C%8Bflask%E6%98%AF%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84/</link>
      <pubDate>Mon, 02 Mar 2020 15:37:20 +0800</pubDate>
      
      <guid>https://hj24.life/posts/%E4%BB%8E%E6%BA%90%E7%A0%81%E7%9C%8Bflask%E6%98%AF%E5%A6%82%E4%BD%95%E4%BF%9D%E8%AF%81%E7%BA%BF%E7%A8%8B%E5%AE%89%E5%85%A8%E7%9A%84/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34; /&gt;
之前粗略的看过flask的文档，知道了它是线程安全的，大概是通过维护了一个以线程ID (在 Greenlet 可用的情况下优先使用 Greenlet 的 ID，因此协程也是一样的)为键的字典，里面放了分配给这个线程的资源来做到线程隔离，以此实现线程安全的目的。
&lt;p&gt;写这篇博客是因为之前有个同事问我他写了个全局变量，在flask里是线程安全的吗？
当时没过脑子，直接回答了是，现在想想&amp;hellip;应该是把他坑了&lt;/p&gt;
&lt;p&gt;为了彻底弄明白这个问题，我搜了很多知乎，stackoverflow，reddit的问答，还有一些博客，也看了一遍相关的源码，最后写下这篇博客，做个记录。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>如何发布自己的Python库</title>
      <link>https://hj24.life/posts/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84python%E5%BA%93/</link>
      <pubDate>Thu, 15 Aug 2019 15:35:36 +0800</pubDate>
      
      <guid>https://hj24.life/posts/%E5%A6%82%E4%BD%95%E5%8F%91%E5%B8%83%E8%87%AA%E5%B7%B1%E7%9A%84python%E5%BA%93/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34; /&gt;
&lt;h2 id=&#34;前言与简介&#34;&gt;前言与简介&lt;/h2&gt;
&lt;p&gt;我想任何一个有追求的Python开发者在度过基础阶段后都想过发布自己的库，也就是我们常说的造轮子，这是成为一个成熟Python开发者的第一步，在造轮子的过程中，无论是自己的编程能力还是为以后给开源项目贡献代码的能力都会得到很大提升。今天这篇博客，就来带大家从0开始，向PyPI贡献自己的开源库。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>