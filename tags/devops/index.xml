<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on 客舟听雨</title>
    <link>https://hj24.life/tags/devops/</link>
    <description>Recent content in Devops on 客舟听雨</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 05 Feb 2020 19:50:30 +0800</lastBuildDate>
    
	<atom:link href="https://hj24.life/tags/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Gitlab CI CD指北</title>
      <link>https://hj24.life/posts/gitlab-ci-cd%E6%8C%87%E5%8C%97/</link>
      <pubDate>Wed, 05 Feb 2020 19:50:30 +0800</pubDate>
      
      <guid>https://hj24.life/posts/gitlab-ci-cd%E6%8C%87%E5%8C%97/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34; /&gt;
之前在公司倒腾过基于Gitlab的CI/CD，现在重新记录一遍流程，做个备忘。
&lt;p&gt;一个典型的流程是这样的：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;提交代码触发CI pipeline -&amp;gt; 安装依赖、编译、自动化测试 -&amp;gt; fix bug
-&amp;gt; 回到上一步 -&amp;gt; Review代码 -&amp;gt; 合并到发布分支 -&amp;gt; 触发CD -&amp;gt; 部署代码、发布&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;基本上更复杂一些的流程都是在这个基础上增改了，下面来走一遍这个流程。&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>将Python项目打包成Docker镜像</title>
      <link>https://hj24.life/posts/%E5%B0%86python%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E6%88%90docker%E9%95%9C%E5%83%8F/</link>
      <pubDate>Fri, 31 Jan 2020 15:36:42 +0800</pubDate>
      
      <guid>https://hj24.life/posts/%E5%B0%86python%E9%A1%B9%E7%9B%AE%E6%89%93%E5%8C%85%E6%88%90docker%E9%95%9C%E5%83%8F/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34; /&gt;
之前写了一篇 Dockerfile编写指南，不过没有涉及到部署项目这种相对复杂的操作，最近写毕设需要把项目打包成docker镜像，部署在服务器上，因此写下这篇博客，对上面那篇做一个补充引申。
&lt;p&gt;一个将Python项目打包成docker镜像的基本流程如下:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;编写好Dockerfile上传至Github/Gitlab -&amp;gt; git拉取代码到服务器 -&amp;gt; build镜像
-&amp;gt; docker run配置端口映射 -&amp;gt; 设置服务器安全组&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Dockerfile编写指北</title>
      <link>https://hj24.life/posts/dockerfile%E7%BC%96%E5%86%99%E6%8C%87%E5%8C%97/</link>
      <pubDate>Thu, 30 Jan 2020 15:34:40 +0800</pubDate>
      
      <guid>https://hj24.life/posts/dockerfile%E7%BC%96%E5%86%99%E6%8C%87%E5%8C%97/</guid>
      <description>&lt;meta name=&#34;referrer&#34; content=&#34;no-referrer&#34; /&gt;
刚开始接触docker时大家基本都是通过`docker pull`命令来拉取镜像，在此基础上`docker exec/run`这些命令，进入容器做一些配置上的修改以此来构建一个容器，而Dockerfile就是一个一劳永益的构建镜像的方法，通过编写Dockerfile来定制自己的镜像。
&lt;p&gt;说白了，就是类似于Python项目的requirements.txt文件，你可以在里面写上自己需要的依赖包，然后安装构建自己项目的依赖:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;requirements.txt =&amp;gt; Dockerfile
pip install =&amp;gt; docker build&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这篇博客会以构建一个简单的Postgres镜像为例，讲一讲用Dockerfile来定制自己的镜像的过程。&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>